{"version":3,"sources":["lib/Utils.js","lib/constants.js","lib/utils.js","state/actions.js","state/mutations.js","state/EventManager.js","state/Store.js","components/BaseComponent.js","components/ExampleComponent.js","App.js","models/Player.js","index.js"],"names":["Utils","constructor","log","createLog","n","msg","obj","color","Error","console","error","Date","toISOString","deepEqual","obj1","obj2","JSON","stringify","deepClone","shallowClone","timeout","ms","Promise","resolve","setTimeout","wait","all","getRandomInt","min","max","Math","floor","random","genRandomToken","gen","tArr","push","toString","substring","join","$i","element","document","getElementById","$q","querySelector","$a","querySelectorAll","$colors","grey","limegreen","lightblue","brightred","pink","seablue","beige","white","maroon","grassgreen","lightgrey","yellow","orange","darkred","$CRYPTO","BTC","DIVI","NANO","DOGE","ETH","RIPPLE","keys","$eventKey","STATE_CHANGE","CRYPTO_BOUGHT","STASH_CHANGED","TRENCH_COAT_CHANGED","$actionKey","$mutationKey","keysToMap","Object","forEach","$keyType","map","k","includes","el","i","arr","values","$k","utils","$x","length","init","context","payload","commit","ex","state","EventManager","events","subscribe","event","callback","hasOwnProperty","publish","data","cb","Store","actions","mutations","self","previousStateCache","Proxy","set","key","value","dispatch","actionKey","warn","groupCollapsed","now","groupEnd","mutationKey","newState","assign","BaseComponent","props","render","store","elements","ExampleComponent","App","components","player","registerComponent","component","registerPlayer","Player","_stash","prop","oldValue","val","_trenchCoat","stash","getStashMods","trenchCoat","getTrenchCoatMods","Array","inc","dec","get","add","remove","splice","indexOf","getCoat","time","app","overlay","navBtn","navs","toggleNav","classList","toggle","contains","nav","replace","addEventListener","hidden","window","onload","timeEnd"],"mappings":"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","file":"index.js","sourceRoot":"..\\src\\js","sourcesContent":["class Utils {\r\n    constructor() {\r\n        this.log = this.createLog();\r\n    }\r\n\r\n    createLog() {\r\n        let n = 0;\r\n        return (msg, obj = {}, color = null) => {\r\n            if (msg instanceof Error) {\r\n                console.error(`${new Date().toISOString()}-LOG-#${++n} => ${msg}`, obj);\r\n                return false;\r\n            }\r\n            console.log(`%c${new Date().toISOString()}-LOG-#${++n} => ${msg}`, `${color ? 'color:' + color : ''}`, obj);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    deepEqual(obj1, obj2) {\r\n        return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n    }\r\n\r\n    deepClone() {\r\n        \r\n    }\r\n\r\n    shallowClone() {\r\n\r\n    }\r\n\r\n    timeout(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    async wait(ms) {\r\n        return await Promise.all([this.timeout(ms / 2)], [this.timeout(ms / 2)]);\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    genRandomToken() {\r\n        return (function gen(n, tArr){\r\n            if (n === 5) return tArr;\r\n            tArr.push(Math.random().toString(36).substring(2, 15));\r\n            return gen(++n, tArr)\r\n        })(0, []).join('');\r\n    }\r\n}\r\n\r\nexport default new Utils();","import utils from './Utils.js';\r\n\r\nconst $i = element => document.getElementById(element);\r\nconst $q = (element) => document.querySelector(element);\r\nconst $a = (element) => document.querySelectorAll(element);\r\n\r\nconst $colors = {\r\n    grey: '#696969',\r\n    limegreen: '#bada55',\r\n    lightblue: '#7fe5f0',\r\n    brightred: '#ff0000',\r\n    pink: '#ff80ed',\r\n    seablue: '#407294',\r\n    beige: '#cbcba9',\r\n    white: '#ffffff',\r\n    maroon: '#420420',\r\n    grassgreen: '#065535',\r\n    lightgrey: '#c0c0c0',\r\n    yellow: '#ffd700',\r\n    orange: '#ffa500',\r\n    darkred: '#800000',\r\n    limegreen: '#00ff00',\r\n\r\n};\r\n\r\nconst $CRYPTO = {\r\n    BTC: 'btc',\r\n    DIVI: 'divi',\r\n    NANO: 'nano',\r\n    DOGE: 'doge',\r\n    ETH: 'eth',\r\n    RIPPLE: 'ripple',\r\n};\r\n\r\nlet keys = {\r\n    $eventKey: {\r\n        STATE_CHANGE: 'stateChange',\r\n        CRYPTO_BOUGHT: 'cryptoBought',\r\n        STASH_CHANGED: 'stashChanged',\r\n        TRENCH_COAT_CHANGED: 'trenchCoatChanged',\r\n    },\r\n    $actionKey: {},\r\n    $mutationKey: {}\r\n};\r\n\r\n(() => {\r\n    let keysToMap = [];\r\n    Object.keys(keys).forEach($keyType => {\r\n        Object\r\n            .keys(keys[$keyType])\r\n            .map(k => {\r\n                if (keysToMap.includes({ [k]: keys[$keyType][k] })) return;\r\n                return keysToMap.push(new Object({ [k]: keys[$keyType][k] }));\r\n            });\r\n    })\r\n\r\n    keysToMap.forEach((el, i, arr) => {\r\n        keys.$actionKey[Object.keys(el)[0]] = Object.values(el)[0];\r\n        keys.$mutationKey[Object.keys(el)[0]] = Object.values(el)[0];\r\n    });\r\n\r\n    return void 0; \r\n})();\r\n\r\nconst $k = [];\r\n\r\n(function gen(n) { \r\n    if (n > 0) {\r\n        $k.push(utils.genRandomToken());\r\n        return gen(--n);\r\n    }\r\n\r\n    return false\r\n})(20);\r\n\r\nconst $x = (() => $k[utils.getRandomInt(0, Object.keys($k).length - 1)])();\r\n\r\nutils.log('keys:', keys, $colors.orange);\r\nutils.log('x-token:', $x, $colors.grassgreen);\r\n\r\nexport { $i, $q, $a, keys, $x, $CRYPTO, $colors };","class Utils {\r\n    constructor() {\r\n        this.log = this.createLog();\r\n    }\r\n\r\n    createLog() {\r\n        let n = 0;\r\n        return (msg, obj = {}, color = null) => {\r\n            if (msg instanceof Error) {\r\n                console.error(`${new Date().toISOString()}-LOG-#${++n} => ${msg}`, obj);\r\n                return false;\r\n            }\r\n            console.log(`%c${new Date().toISOString()}-LOG-#${++n} => ${msg}`, `${color ? 'color:' + color : ''}`, obj);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    deepEqual(obj1, obj2) {\r\n        return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n    }\r\n\r\n    deepClone() {\r\n        \r\n    }\r\n\r\n    shallowClone() {\r\n\r\n    }\r\n\r\n    timeout(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    async wait(ms) {\r\n        return await Promise.all([this.timeout(ms / 2)], [this.timeout(ms / 2)]);\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    genRandomToken() {\r\n        return (function gen(n, tArr){\r\n            if (n === 5) return tArr;\r\n            tArr.push(Math.random().toString(36).substring(2, 15));\r\n            return gen(++n, tArr)\r\n        })(0, []).join('');\r\n    }\r\n}\r\n\r\nexport default new Utils();","import utils from '../lib/Utils.js';\r\n\r\nconst log = utils.log;\r\n\r\nexport default {\r\n    init: function(context, payload) {\r\n        log('App initialising', 'lightblue');\r\n        // execute stuff\r\n        // commit stuff\r\n        context.commit('mutationKey', null);\r\n    }\r\n}","import utils from '../lib/Utils.js';\r\n\r\nconst log = utils.log;\r\n\r\nexport default {\r\n    ex: (state, payload) => {\r\n        // mutate state\r\n        return state;\r\n    },\r\n}","export default class EventManager {\r\n    constructor() {\r\n        this.events = [];\r\n    }\r\n\r\n    subscribe(event, callback) {\r\n        if(!this.events.hasOwnProperty(event)) {\r\n            this.events[event] = [];\r\n        }\r\n\r\n        return this.events[event].push(callback);\r\n    }\r\n\r\n    publish(event, data = {}) {\r\n        if(!this.events.hasOwnProperty(event)) {\r\n            throw new Error(`EventManager does not have ${event} subscribed`);\r\n        }\r\n\r\n        return this.events[event].map(cb => cb(data));\r\n    }\r\n}","export default class Store {\r\n    constructor({ actions, mutations, state, events }) {\r\n        const self = this;\r\n\r\n        self.actions = actions;\r\n        self.mutations = mutations;\r\n        self.events = events;\r\n\r\n        self.previousStateCache = {};\r\n\r\n        self.state = new Proxy((state || {}), {\r\n            set: function(state, key, value) {\r\n\r\n                state[key] = value;\r\n                self.previousStateCache[key] = value;\r\n\r\n                console.log(`${$eventKey.STATE_CHANGE}: ${key}:`, value);\r\n                \r\n                self.events.publish($eventKey.STATE_CHANGE);\r\n\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    dispatch(actionKey, payload) {\r\n        if (typeof(this.actions[actionKey]) !== 'function') {\r\n            console.warn(`${actionKey} is not a registered action`);\r\n            return false;\r\n        }\r\n\r\n        console.groupCollapsed(`ACTION: ${actionKey} ${Date.now()}`);\r\n\r\n        this.actions[actionKey](this, payload);\r\n\r\n        console.groupEnd();\r\n\r\n        return true;\r\n    }\r\n\r\n    commit(mutationKey, payload) {\r\n        if(typeof(this.mutations[mutationKey]) !== 'function') {\r\n            console.warn(`${this.mutations[mutationKey]} is not a registered mutation`);\r\n            return false;\r\n        }\r\n\r\n        console.groupCollapsed(`MUTATION: ${mutationKey} ${Date.now()}`);\r\n\r\n        const newState = this.mutations[mutationKey](this.state, payload);\r\n\r\n        this.state = Object.assign(this.state, newState);\r\n\r\n        console.groupEnd();\r\n\r\n        return true;\r\n    }\r\n}","import Store from '../state/Store.js';\r\nimport { keys } from '../lib/constants.js';\r\n\r\nexport default class BaseComponent {\r\n    constructor(props) {\r\n        this.render = this.render || function noop() {};\r\n\r\n        if (props.store instanceof Store) {\r\n            props.store.events.subscribe(keys.$eventKey.STATE_CHANGE, () => this.render());\r\n        }\r\n\r\n        if (props.hasOwnProperty('element')) {\r\n            this.element = props.element;\r\n        }\r\n\r\n        if (props.hasOwnProperty('elements')) {\r\n            this.elements = props.elements;\r\n        }\r\n    }\r\n}","import BaseComponent from './BaseComponent.js';\r\n\r\nexport default class ExampleComponent extends BaseComponent {\r\n    constructor(store) {\r\n        super({\r\n            store: store,\r\n            elements: {\r\n            } \r\n        });\r\n\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        \r\n    }\r\n}","export default class App {\r\n    constructor({ store, components, $x, init }) {\r\n        this.store = store;\r\n        this.components = components;\r\n        this.$x = $x;\r\n        this.init = init;\r\n        this.player = null;\r\n    }\r\n\r\n    registerComponent(component, k) {\r\n        this.components.push(component);\r\n    }\r\n\r\n    registerPlayer(player, k) {\r\n        if (k === this.$x) return this.player = player;\r\n        throw new Error('Unauthorised!');\r\n    }\r\n}","import { keys, $x } from '../lib/constants.js';\r\n\r\nexport class Player {\r\n    constructor(store) {\r\n        let _stash = new Proxy({}, {\r\n            set: (obj, prop, value) => {\r\n                const oldValue = obj[prop];\r\n                obj[prop] = value;\r\n                store.events.publish(keys.$eventKey.STASH_CHANGED, { prop, val, oldValue });\r\n            }\r\n        });\r\n\r\n        let _trenchCoat = new Proxy([], {\r\n            set: (obj, prop, val) => {\r\n                const oldValue = obj[prop];\r\n                obj[prop] = value;\r\n                store.events.publish(keys.$eventKey.TRENCH_COAT_CHANGED, { prop, val, oldValue });\r\n            }\r\n        })\r\n\r\n        this.stash = this.getStashMods(_stash);\r\n        this.trenchCoat = this.getTrenchCoatMods(_trenchCoat);\r\n\r\n        this.stash.set(2000, $x);\r\n        this.trenchCoat.set(new Array(100), $x);\r\n    }\r\n\r\n    getStashMods(_stash) {\r\n        return {\r\n            inc: (val, k) => k == $x ? _stash += val : void 0,\r\n            dec: (val, k) => k == $x ? _stash -= val : void 0,\r\n            set: (val, k) => k == $x ? _stash = val : void 0,\r\n            get: () => _stash\r\n        }\r\n    }\r\n\r\n    getTrenchCoatMods(_trenchCoat) {\r\n        return {\r\n            add: (val, k) => k == $x ? _trenchCoat.push(val) : void 0,\r\n            remove: (val, k) => k == $x ? _trenchCoat.splice(_trenchCoat.indexOf(val)) : void 0,\r\n            set: (val, k) => k == $x ? _trenchCoat = val : void 0,\r\n            getCoat: () => _trenchCoat\r\n        }\r\n    }\r\n}\r\n\r\n","console.time('boot-time');\r\n\r\nimport { $i, $q, $a, $x } from './lib/constants.js';\r\nimport utils from './lib/utils.js';\r\nimport actions from './state/actions.js';\r\nimport mutations from './state/mutations.js';\r\nimport EventManager from './state/EventManager.js'\r\nimport Store from './state/Store.js';\r\n\r\nimport BaseComponent from './components/BaseComponent.js';\r\nimport ExampleComponent from './components/ExampleComponent.js';\r\n\r\nimport App from './App.js'\r\nimport { Player } from './models/Player.js';\r\n\r\nconst app = new App({\r\n    store: new Store({\r\n        actions,\r\n        mutations,\r\n        events: new EventManager()\r\n    }),\r\n    components: [],\r\n    $x: $x,\r\n    init: (self) => {\r\n        const overlay = $i('overlay');\r\n        const navBtn = $i('menu-bars');\r\n        const nav = $i('nav');\r\n        const navs = [$i('nav-1'), $i('nav-2'), $i('nav-3'), $i('nav-4'), $i('nav-5'), $i('nav-6')];\r\n\r\n        const toggleNav = () => {\r\n            navBtn.classList.toggle('change');\r\n            overlay.classList.toggle('overlay-active');\r\n\r\n            if (overlay.classList.contains('overlay-active')) {\r\n                navs.forEach((nav, i) => nav.classList.replace(`nav-${i + 1}-slide-out`, `nav-${i + 1}-slide-in`));\r\n                overlay.classList.replace('overlay-slide-out', 'overlay-slide-in');\r\n            } else {\r\n\r\n                navs.forEach((nav, i) => nav.classList.replace(`nav-${i + 1}-slide-in`, `nav-${i + 1}-slide-out`));\r\n                overlay.classList.replace('overlay-slide-in', 'overlay-slide-out');\r\n            }\r\n        }\r\n\r\n        $i('menu-bars').addEventListener('click', toggleNav);\r\n        $i('nav').addEventListener('click', toggleNav);\r\n        overlay.hidden = false;\r\n\r\n        self.registerComponent(new ExampleComponent(app.store));\r\n        self.registerPlayer(new Player(), $x);\r\n    },\r\n});\r\n\r\nwindow.onload = () => app.init(app);\r\n\r\nconsole.timeEnd('boot-time');\r\n\r\nutils.log('App:', app, '#bada55');"]}